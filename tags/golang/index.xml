<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>golang on monique.dev</title><link>https://monique.dev/tags/golang/</link><description>Recent content in golang on monique.dev</description><generator>Hugo -- gohugo.io</generator><language>pt-br</language><copyright>MoniqueLive</copyright><lastBuildDate>Wed, 21 Oct 2020 12:00:00 -0300</lastBuildDate><atom:link href="https://monique.dev/tags/golang/index.xml" rel="self" type="application/rss+xml"/><item><title>Parsing em GO com uso eficiente da memória</title><link>https://monique.dev/post/go-parsing/</link><pubDate>Wed, 21 Oct 2020 12:00:00 -0300</pubDate><guid>https://monique.dev/post/go-parsing/</guid><description>Ao invés de ler todo o fluxo gulosamente em memória e passá-lo para json.Unmarshal:
1 json.Unmarshal(umMonteDeBytes, &amp;amp;minhaStruct) Nós podemos delegar a leitura do fluxo para os nossos queridos mestres da golang:
1 json.NewDecoder(meuIOReader).Decode(&amp;amp;minhaStruct) E ler arquivos de multi-giga(tera?)bytes sem suor. Também funciona com xml.NewDecoder.
_
= M =</description></item></channel></rss>